name: Import PowerApps TestEngine and run test suite

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '15 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['6.0.x']
        
    steps:
      - name: CheckoutTestEngine
        uses: actions/checkout@v3.3.0
        with:
          repository: microsoft/PowerApps-TestEngine

      - name: CheckoutTests
        uses: actions/checkout@v3.3.0
        with:
          path: tests

      - name: Install dependencies
        run: |
          cd src
          dotnet restore
      - name: Build
        run: |
          cd src
          dotnet build --configuration Release --no-restore

      - name: Integration Test
        env:
            user1Email: '${{ secrets.POWER_PLATFORM_USER }}'
            user1Password: '${{ secrets.POWER_PLATFORM_PASSWORD }}'
        run: |   
          cd src/PowerAppsTestEngine
          dotnet build
          dir ../
          dir ../../
          dir ../bin/Debug/net6.0/
          pwsh bin/Debug/net6.0/playwright.ps1 install
          cd ../../build-pipelines/scripts
          chmod +x yaml-integration-tests.sh
          export test_suite=$(cat "../../tests/tests/test-suite.json")
          ./yaml-integration-tests.sh "$test_suite"       
      - name: Power Apps Test Report
        uses: dorny/test-reporter@v1.5.0
        if: success() || failure() 
        #if: failure()   # run this step even if previous step failed
        with:
          name: Power Apps Tests          # Name of the check run which will be created
          path: '**/*.trx'            
          reporter: dotnet-trx        # Format of test results
          fail-on-error: 'true' # Set action as failed if test report contains any failed test      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        if: ${{always()}}
        with:
            name: 'Test Run'
            path: |
                **/TestResults/**
                
